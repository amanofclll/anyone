<!DOCTYPE html>
<html>
<head>
    <title>Open Sharing Platform</title>
    <style>
        /* ... (keep the same styles as before) ... */
    </style>
    
    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-storage.js"></script>
</head>
<body>
    <!-- ... (keep the same HTML structure as before) ... -->

    <script>
        // ... (keep the same Firebase config and initialization) ... 

        async function uploadContent() {
            const title = document.getElementById('title').value;
            const text = document.getElementById('text').value;
            const link = document.getElementById('link').value;
            const image = document.getElementById('image').files[0];
            
            let imageUrl = '';
            if (image) {
                const storageRef = storage.ref('images/' + image.name);
                await storageRef.put(image);
                imageUrl = await storageRef.getDownloadURL();
            }

            const postData = {
                title: title,
                text: text,
                link: link,
                imageUrl: imageUrl,
                timestamp: Date.now()
            };

            // Push new post and then check count
            const newPostRef = database.ref('posts').push();
            await newPostRef.set(postData);

            // Automatically keep only last 10 posts
            const postsSnapshot = await database.ref('posts')
                .orderByChild('timestamp')
                .once('value');

            const posts = [];
            postsSnapshot.forEach((childSnapshot) => {
                posts.push({
                    key: childSnapshot.key,
                    ...childSnapshot.val()
                });
            });

            // Delete older posts if more than 10
            if (posts.length > 10) {
                const postsToDelete = posts.slice(0, posts.length - 10);
                const deletePromises = postsToDelete.map(post => 
                    database.ref('posts/' + post.key).remove()
                );
                await Promise.all(deletePromises);
            }
            
            alert('Content shared!');
        }

        // ... (keep the same display function as before) ...
    </script>
</body>
</html>
